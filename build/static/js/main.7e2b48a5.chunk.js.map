{"version":3,"sources":["components/Header.js","components/Control.js","components/Output.js","components/Footer.js","App.js","index.js"],"names":["Header","className","Control","props","fetchMemes","event","a","preventDefault","axios","get","response","data","generateMeme","memes","console","log","handleChange","target","name","setState","value","state","topText","bottomText","id","placeholder","type","this","onChange","onClick","updateText","Component","Output","imageSrc","texts","src","alt","width","height","Footer","href","rel","App","images","image","Math","floor","random","length","url","ReactDOM","render","document","getElementById"],"mappings":"0NAUeA,MAVf,WACI,OACI,wBAAQC,UAAU,eAAlB,SACI,qBAAKA,UAAU,YAAf,SACI,mBAAGA,UAAU,0BAAb,iC,iDCAVC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,WARmB,uCAQN,WAAOC,GAAP,iBAAAC,EAAA,6DACTD,EAAME,iBACU,oCAFP,kBAIkBC,IAAMC,IAFjB,qCAFP,OAICC,EAJD,OAKCC,EAAOD,EAASC,KACtB,EAAKR,MAAMS,aAAaD,EAAKA,KAAKE,OAN7B,kDAQLC,QAAQC,IAAR,MARK,0DARM,wDAoBnBC,aAAe,SAACX,GACZ,IAAIY,EAASZ,EAAMY,OACfC,EAAOD,EAAOC,KAClB,EAAKC,SAAL,eACKD,EAAOD,EAAOG,SAtBnB,EAAKC,MAAQ,CACTC,QAAS,GACTC,WAAY,IAJD,E,0CA4BnB,WAAU,IAAD,OACL,OACI,0BAAStB,UAAU,UAAnB,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,sBAAf,SACA,uBACIA,UAAU,kDACVuB,GAAG,YACHC,YAAY,WACZC,KAAK,OACLR,KAAK,UACLE,MAAOO,KAAKN,MAAMC,QAClBM,SAAUD,KAAKX,mBAIvB,qBAAKf,UAAU,mBAAf,SACI,qBAAKA,UAAU,sBAAf,SACA,uBACIA,UAAU,kDACVuB,GAAG,eACHC,YAAY,cACZC,KAAK,OACLR,KAAK,aACLE,MAAOO,KAAKN,MAAME,WAClBK,SAAUD,KAAKX,mBAIvB,qBAAKf,UAAU,mBAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,wBACIA,UAAU,uCACVuB,GAAG,SACHK,QAAS,SAACxB,GACN,EAAKD,WAAWC,GAChB,EAAKF,MAAM2B,WAAW,EAAKT,QALnC,4B,GA5DFU,aA6EP7B,IC7DA8B,MAlBf,YAAsC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAExB,OACI,yBAASjC,UAAU,gDAAnB,SACI,yBAASA,UAAU,oBAAnB,SACI,qBAAKA,UAAU,eAAeuB,GAAG,SAAjC,SACA,sBAAKvB,UAAU,OAAf,UACI,qBAAKkC,IAAKF,EACVT,GAAG,MAAMY,IAAK,CAACC,MAAM,SAAUC,OAAO,UACtC,oBAAId,GAAG,WAAWvB,UAAU,MAA5B,SAAmCiC,EAAMZ,UACzC,oBAAIE,GAAG,cAAcvB,UAAU,SAA/B,SAAyCiC,EAAMX,uBCEpDgB,MAdf,WACI,OACI,wBAAQtC,UAAU,SAAlB,SACI,sBAAKA,UAAU,4BAAf,kCAEI,mBAAGuC,KAAK,0BAA0BvB,OAAO,SAASwB,IAAI,aAAtD,0BAFJ,UC+CGC,E,kDA1Cb,WAAYvC,GAAQ,IAAD,8BACjB,cAAMA,IAYRS,aAAe,SAAC+B,GACd,IAAMC,EAAQD,EAAOE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAOK,SACvD,EAAK7B,SAAS,CACZc,SAAUW,EAAMK,OAhBD,EAsBnBnB,WAAa,SAACI,GACZ,EAAKf,SAAS,CACZe,MAAM,eAAKA,MAtBb,EAAKb,MAAQ,CACXY,SAAU,2FAEVC,MAAO,CACLZ,QAAS,GACTC,WAAY,KAPC,E,0CA4BnB,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAASX,aAAce,KAAKf,aAAcsB,MAAOP,KAAKN,MAAMa,MAAOJ,WAAYH,KAAKG,aACpF,cAAC,EAAD,CAAQG,SAAUN,KAAKN,MAAMY,SAAUC,MAAOP,KAAKN,MAAMa,QACzD,cAAC,EAAD,W,GAnCUH,a,MCFlBmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7e2b48a5.chunk.js","sourcesContent":["function Header() {\n    return(\n        <header className=\"hero is-link\">\n            <div className=\"hero-body\">\n                <p className=\"title has-text-centered\">Meme Generator</p>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n\n\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\n\nclass Control extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            topText: \"\",\n            bottomText: \"\"\n        };\n    }\n    \n    fetchMemes = async (event) => {\n        event.preventDefault();\n        const memeAPI = \"https://api.imgflip.com/get_memes\";\n        try {\n            const response = await axios.get(memeAPI);\n            const data = response.data;\n            this.props.generateMeme(data.data.memes);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    handleChange = (event) => {\n        let target = event.target;\n        let name = target.name;\n        this.setState({\n            [name]: target.value\n        });\n    }\n\n    render() {\n        return (\n            <section className=\"section\">\n                <div className=\"field has-addons\">\n                    <div className=\"control is-expanded\">\n                    <input\n                        className=\"input is-large is-fullwidth is-family-monospace\"\n                        id=\"top-input\"\n                        placeholder=\"Top text\"\n                        type=\"text\"\n                        name=\"topText\"\n                        value={this.state.topText}\n                        onChange={this.handleChange}\n                    />\n                    </div>\n                </div>\n                <div className=\"field has-addons\">\n                    <div className=\"control is-expanded\">\n                    <input\n                        className=\"input is-large is-fullwidth is-family-monospace\"\n                        id=\"bottom-input\"\n                        placeholder=\"Bottom text\"\n                        type=\"text\"\n                        name=\"bottomText\"\n                        value={this.state.bottomText}\n                        onChange={this.handleChange}\n                    />\n                    </div>\n                </div>\n                <div className=\"field has-addons\">\n                    <div className=\"control is-expanded\">\n                        <button \n                            className=\"button is-link is-large is-fullwidth\" \n                            id=\"go-btn\"\n                            onClick={(event)=>{\n                                this.fetchMemes(event);\n                                this.props.updateText(this.state);\n                            }}>\n                            Go!\n                        </button>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n\n}\n\nexport default Control;\n\nControl.propTypes = {\n    generateMeme: PropTypes.func.isRequired,\n    texts: PropTypes.object.isRequired,\n    updateText: PropTypes.func.isRequired\n}","import PropTypes from \"prop-types\";\n\nfunction Output({ imageSrc, texts }) {  \n\n    return (\n        <section className=\"section is-medium pt-0 pb-6 has-text-centered\" >\n            <article className=\"message is-medium\" >\n                <div className=\"message-body\" id=\"output\">\n                <div className=\"meme\">\n                    <img src={imageSrc}\n                    id=\"img\" alt={{width:\"800rem\", height:\"auto\"}}/>\n                    <h2 id=\"top-text\" className=\"top\">{texts.topText}</h2>\n                    <h2 id=\"bottom-text\" className=\"bottom\">{texts.bottomText}</h2>\n                </div>\n                </div>\n            </article>\n        </section>\n    );\n}\n\nexport default Output;\nOutput.propTypes = {\n    imageSrc: PropTypes.string.isRequired,\n    texts: PropTypes.object.isRequired,\n}","function Footer() {\n    return (\n        <footer className=\"footer\">\n            <div className=\"content has-text-centered\">\n                This program uses the\n                <a href=\"https://imgflip.com/api\" target=\"_blank\" rel=\"noreferrer\"\n                > Imgflip API</a\n                >.\n            </div>\n        </footer>\n    );\n\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport Header from \"./components/Header\"\nimport Control from \"./components/Control\"\nimport Output from \"./components/Output\"\nimport Footer from \"./components/Footer\"\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageSrc: \"data:image/svg+xml;charset=utf8,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%3E%3C/svg%3E\",\n\n      texts: {\n        topText: \"\",\n        bottomText: \"\"\n      }\n\n    }\n  }\n\n  generateMeme = (images) => {\n    const image = images[Math.floor(Math.random() * images.length)]; \n    this.setState({\n      imageSrc: image.url\n    });\n  }\n\n  //prevent default for image and text\n  // use async\n  updateText = (texts) => {\n    this.setState({\n      texts: {...texts}\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Control generateMeme={this.generateMeme} texts={this.state.texts} updateText={this.updateText}/>\n        <Output imageSrc={this.state.imageSrc} texts={this.state.texts} /> \n        <Footer />\n      </>\n    );\n  }\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}